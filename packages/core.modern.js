import{on as t}from"@frsource/tiny-carousel-utils";const s={active:0,className:"frs-tc",itemClassName:"frs-tc-item",hideScrollClassName:"frs-hide-scroll"};class i{constructor(i,e={}){this.carouselElement=i,this.config=Object.assign({},s,e),this.items=this.findPossibleItems(),t(i,"scroll",this.resetActive.bind(this),{passive:!0})}static get defaultConfig(){return Object.assign({},s)}static updateDefaultConfig(t){Object.assign(s,t)}use(t,...s){return t.install(this,...s),this}init(){const{add:t}=this.carouselElement.classList,{config:s}=this;return t(s.className),t(s.hideScrollClassName),this.goTo(s.active),this}get t(){var t;const{carouselElement:s}=this;let i=s.scrollLeft+s.clientWidth/2;return(null==(t=this.items[0])?void 0:t.offsetParent)!==s&&(i+=s.offsetLeft),i}get active(){if(void 0!==this.i)return this.i;const t=this.t;let s,i=-1;for(;(s=this.items[++i])&&t>=s.offsetLeft;);return this.i=--i}goTo(t){return t<0?this.goTo(t+this.items.length):!(t>this.items.length-1||(this.carouselElement.scrollLeft=this.items[t].offsetLeft,0))}next(){return this.goTo(this.active+1)}prev(){return this.active>0&&this.goTo(this.active-1)}resetActive(){this.i=void 0}findPossibleItems(){const t=Array.from(this.carouselElement.children),{itemClassName:s}=this.config,i=t.filter(t=>t.classList.contains(s));return i.length?i:(t.forEach(t=>{t.classList.add(s)}),t)}}export{i as TinyCarousel};
//# sourceMappingURL=core.modern.js.map
