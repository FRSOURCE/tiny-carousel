{"version":3,"file":"utils.js","sources":["../../../../packages/utils/src/events.ts"],"sourcesContent":["export interface EventDetailMap {\n  'before:init'?: undefined;\n  'after:init'?: undefined;\n  'before:go-to': { to: { index: number; } };\n  'after:go-to': { to: { index: number; }; };\n  'error:go-to': { to: { index: number; }; cause: 'overflow' };\n  'before:find-possible-items'?: undefined;\n  'after:find-possible-items'?: undefined;\n}\nexport type CustomEventListener<E extends keyof EventDetailMap = keyof EventDetailMap> =\n  ((e: CustomEvent<EventDetailMap[E]>)=> void);\n\n// TODO: add possibility to pass event/target array?\n\nexport const on: {\n  <E extends keyof EventDetailMap>(target: Element, event: E, handler: CustomEventListener<E>, options?: boolean | AddEventListenerOptions): void;\n  (target: Element, event: string, handler: EventListener, options?: boolean | AddEventListenerOptions): void;\n} = (target: Element, event: string, handler: EventListener | CustomEventListener, options?: boolean | AddEventListenerOptions) => {\n  target.addEventListener(event, handler as EventListener, options);\n}\n\nexport const off: {\n  <E extends keyof EventDetailMap>(target: Element, event: E, handler: CustomEventListener<E>): void;\n  (target: Element, event: string, handler: EventListener): void;\n} = (target: Element, event: string, handler: EventListener | CustomEventListener) => {\n  target.removeEventListener(event, handler as EventListener);\n}\n\nexport const dispatch: {\n  <E extends keyof EventDetailMap, P extends EventDetailMap[E]>(target: Element, event: E, ...[payload, options]: (P extends undefined ? [undefined?, EventInit?] : never)): boolean;\n  <E extends keyof EventDetailMap>(target: Element, event: E, payload: EventDetailMap[E], options?: EventInit): boolean;\n} = <E extends keyof EventDetailMap>(\n  target: Element, event: E, payload?: EventDetailMap[E], options?: EventInit\n) =>\n  target.dispatchEvent(new CustomEvent(event, Object.assign({ detail: payload }, options)));\n"],"names":["target","event","payload","options","dispatchEvent","CustomEvent","Object","assign","detail","handler","removeEventListener","addEventListener"],"mappings":"sPA+BI,SACFA,EAAiBC,EAAUC,EAA6BC,UAExDH,EAAOI,cAAc,IAAIC,YAAYJ,EAAOK,OAAOC,OAAO,CAAEC,OAAQN,GAAWC,YAV7E,SAACH,EAAiBC,EAAeQ,GACnCT,EAAOU,oBAAoBT,EAAOQ,SARhC,SAACT,EAAiBC,EAAeQ,EAA8CN,GACjFH,EAAOW,iBAAiBV,EAAOQ,EAA0BN"}