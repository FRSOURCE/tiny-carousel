import{_ as i,r as a,o as r,c,b as n,d as e,a as t,w as l}from"./app.64a96d4b.js";const u={},d=e("h1",{id:"integration-react",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#integration-react","aria-hidden":"true"},"#"),n(" Integration - React")],-1),h={href:"https://github.com/FRSOURCE/tiny-carousel/blob/master/packages/react/src/App.tsx",target:"_blank",rel:"noopener noreferrer"},p=e("h2",{id:"global-api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#global-api","aria-hidden":"true"},"#"),n(" Global API")],-1),_=e("h3",{id:"defineplugin",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defineplugin","aria-hidden":"true"},"#"),n(" definePlugin")],-1),g=e("p",null,[e("strong",null,"Arguments:")],-1),f=e("li",null,[e("p",null,[e("strong",null,"Returns:"),n(),e("code",null,"[plugin: PluginDefinition, options: PluginOptions]")])],-1),m=e("li",null,[e("p",null,[e("strong",null,"Usage:")]),n(),e("p",null,"Method used to properly format plugin configuration array before passing it to the TinyCarousel component. Add stricter TypeScript typings. Second argument (option) is dependent on the plugin you`re trying to use.")],-1),y=e("h2",{id:"components",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#components","aria-hidden":"true"},"#"),n(" Components")],-1),b=e("h3",{id:"tinycarousel",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tinycarousel","aria-hidden":"true"},"#"),n(" TinyCarousel")],-1),C=e("p",null,[e("strong",null,"Props:")],-1),x=e("li",null,[e("code",null,'{string} tag = "ul"')],-1),T=e("li",null,[e("code",null,"{string} className")],-1),k=e("li",null,[e("code",null,"{PluginsProp} plugins = []")],-1),v=e("code",null,"{Config} config",-1),E=e("li",null,[e("code",null,"{ReactNode} children")],-1),R=e("li",null,[e("code",null,"{function} [eventCallbackName] (e.g. onAfterEventInit)")],-1),A=e("p",null,[e("strong",null,"Events:")],-1),w=e("code",null,"TinyCarousel",-1),N=e("code",null,"on{TIMING}Event{EVENT_NAME}",-1),I=e("code",null,"TIMING",-1),P=e("code",null,"EVENT_NAME",-1),D=e("code",null,"after:init",-1),L=e("code",null,"onAfterEventInit",-1),S=e("p",null,[e("strong",null,"Details:")],-1),U=e("p",null,"Component added by React integration. Creates single TinyCarousel instance with tag name, plugins and configuration passed as a props. Change of the slotted children or any of the props would lead to TinyCarousel\u2019s reinitialization.",-1),M={href:"https://reactjs.org/docs/hooks-reference.html#useref",target:"_blank",rel:"noopener noreferrer"},O=e("code",null,"ref",-1),V={href:"https://github.com/FRSOURCE/tiny-carousel/blob/master/packages/react/src/App.tsx#L40",target:"_blank",rel:"noopener noreferrer"},F=e("h2",{id:"options",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#options","aria-hidden":"true"},"#"),n(" Options")],-1),B=e("h3",{id:"tinycarouselref",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tinycarouselref","aria-hidden":"true"},"#"),n(" TinyCarouselRef")],-1),G=e("ul",null,[e("li",null,[e("p",null,[e("strong",null,"Details:")]),n(),e("p",null,[n("Data type describing TinyCarousel reference. Use it to add the proper type to the carousel "),e("code",null,"ref"),n(".")])])],-1),j=e("h3",{id:"tinycarouselprops",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tinycarouselprops","aria-hidden":"true"},"#"),n(" TinyCarouselProps")],-1),z=e("p",null,[e("strong",null,"Details:")],-1),q={href:"https://github.com/FRSOURCE/tiny-carousel/blob/master/packages/react/src/App.tsx#L21",target:"_blank",rel:"noopener noreferrer"};function H(J,K){const o=a("RouterLink"),s=a("ExternalLinkIcon");return r(),c("div",null,[d,n(),e("p",null,[n("This integration implements a React component which allows you to use TinyCarousel along with its whole plugin "),t(o,{to:"/ecosystem/#plugins"},{default:l(()=>[n("ecosystem")]),_:1}),n(".")]),n(),e("p",null,[n("To learn on how to install and use plugin, "),t(o,{to:"/guide/usage/#react"},{default:l(()=>[n("please see our usage guide")]),_:1}),n(" or look into an example React app in the "),e("a",h,[n("Tiny Carousel React repository"),t(s)]),n(".")]),n(),p,n(),_,n(),e("ul",null,[e("li",null,[g,n(),e("p",null,[n("Same as "),t(o,{to:"/api-reference/core/#carousel-use"},{default:l(()=>[n("carousel.use")]),_:1}),n(".")])]),n(),f,n(),m]),n(),y,n(),b,n(),e("ul",null,[e("li",null,[C,n(),e("ul",null,[x,n(),T,n(),k,n(),e("li",null,[t(o,{to:"/api-reference/core/#config"},{default:l(()=>[v]),_:1})]),n(),E,n(),R])]),n(),e("li",null,[A,n(),e("p",null,[n("To add event emission you need to use "),t(o,{to:"/ecosystem/#plugin-custom-events"},{default:l(()=>[n("Plugin Custom Events")]),_:1}),n(".")]),n(),e("p",null,[n("All custom events can be handled with use of prop passed directly on the "),w,n(" component element. The name of prop follows the pattern "),N,n(" where "),I,n(" and "),P,n(" are taken from "),t(o,{to:"/api-reference/plugin-custom-events/#events"},{default:l(()=>[n("one of the TinyCarousel events")]),_:1}),n(". An example, so specify listener for "),D,n(" event, you should pass a callback as a value of the "),L,n(" prop. For examples, have a look in a guide.")])]),n(),e("li",null,[S,n(),U,n(),e("p",null,[n("Additional API can be reached by using "),e("a",M,[O,t(s)]),n(" as can be seen "),e("a",V,[n("in the example"),t(s)]),n(".")])])]),n(),F,n(),B,n(),G,n(),j,n(),e("ul",null,[e("li",null,[z,n(),e("p",null,[n("Data type describing TinyCarousel component props. Use it to add the proper type to your callbacks "),e("a",q,[n("as shown here"),t(s)]),n(".")])])])])}var W=i(u,[["render",H],["__file","integration-react.html.vue"]]);export{W as default};
